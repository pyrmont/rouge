-- Some of the examples provided in [SIES'13] "Engineering Functional
-- Requirements of Reactive Systems using Synchronous Languages"

let inertia=0.6
node gen_x_v2() returns (x:real) = loop { 0.0<x and x<42.0 fby loop [20] x = pre x }

node gen_x_v4()  returns (target:real; x:real=0.0) =
  run target := gen_x_v2() in
  exist px,ppx : real = 0.0 in
  loop { 
      px = pre x and ppx = pre px and
      x = (px+target) / 2.0+inertia*(px-ppx) 
  }

-- saw-tooth curves
let  Between(x, min, max : real) : bool = ((min < x) and (x < max))

node up(init, delta:real) returns( x : real) = 
   x = init fby loop { Between(x, pre x, pre x + delta) }
node down(init, delta:real) returns( x : real) = 
   x = init fby loop { Between(x, pre x - delta, pre x) }
   
node up_and_down(min, max, delta : real) returns (x : real) =   
   Between(x, min, max)
 fby
   loop {
        | run x := up(pre x, delta)   in loop { x < max }
        | run x := down(pre x, delta) in loop { x > min }
       }
